include_directories(3rdparty 3rdparty/zlib)

set(glc_SRCS
    3rdparty/zlib/adler32.c
    3rdparty/zlib/compress.c
    3rdparty/zlib/crc32.c
    3rdparty/zlib/deflate.c
    3rdparty/zlib/gzio.c
    3rdparty/zlib/inffast.c
    3rdparty/zlib/inflate.c
    3rdparty/zlib/inftrees.c
    3rdparty/zlib/trees.c
    3rdparty/zlib/uncompr.c
    3rdparty/zlib/zutil.c
    3rdparty/quazip/ioapi.c
    3rdparty/quazip/quazip.cpp
    3rdparty/quazip/quazipfile.cpp
    3rdparty/quazip/quazipnewinfo.cpp
    3rdparty/quazip/unzip.c
    3rdparty/quazip/zip.c
    3rdparty/lib3ds/atmosphere.c
    3rdparty/lib3ds/background.c
    3rdparty/lib3ds/camera.c
    3rdparty/lib3ds/chunk.c
    3rdparty/lib3ds/ease.c
    3rdparty/lib3ds/file.c
    3rdparty/lib3ds/io.c
    3rdparty/lib3ds/light.c
    3rdparty/lib3ds/material.c
    3rdparty/lib3ds/matrix.c
    3rdparty/lib3ds/mesh.c
    3rdparty/lib3ds/node.c
    3rdparty/lib3ds/quat.c
    3rdparty/lib3ds/shadow.c
    3rdparty/lib3ds/tcb.c
    3rdparty/lib3ds/tracks.c
    3rdparty/lib3ds/vector.c
    3rdparty/lib3ds/viewport.c
    maths/glc_matrix4x4.cpp
    maths/glc_vector4d.cpp
    maths/glc_interpolator.cpp
    maths/glc_plane.cpp
    maths/glc_geomtools.cpp
    maths/glc_line3d.cpp
    io/glc_objmtlloader.cpp
    io/glc_objtoworld.cpp
    io/glc_stltoworld.cpp
    io/glc_offtoworld.cpp
    io/glc_3dstoworld.cpp
    io/glc_3dxmltoworld.cpp
    io/glc_colladatoworld.cpp
    io/glc_worldto3dxml.cpp
    io/glc_worldto3ds.cpp
    io/glc_bsreptoworld.cpp
    io/glc_fileloader.cpp
    sceneGraph/glc_3dviewcollection.cpp
    sceneGraph/glc_3dviewinstance.cpp
    sceneGraph/glc_structreference.cpp
    sceneGraph/glc_structinstance.cpp
    sceneGraph/glc_structoccurence.cpp
    sceneGraph/glc_world.cpp
    sceneGraph/glc_attributes.cpp
    sceneGraph/glc_worldhandle.cpp
    sceneGraph/glc_spacepartitioning.cpp
    sceneGraph/glc_octree.cpp
    sceneGraph/glc_octreenode.cpp
    sceneGraph/glc_selectionset.cpp
    geometry/glc_geometry.cpp
    geometry/glc_circle.cpp
    geometry/glc_cylinder.cpp
    geometry/glc_point.cpp
    geometry/glc_box.cpp
    geometry/glc_meshdata.cpp
    geometry/glc_primitivegroup.cpp
    geometry/glc_mesh.cpp
    geometry/glc_lod.cpp
    geometry/glc_rectangle.cpp
    geometry/glc_line.cpp
    geometry/glc_rep.cpp
    geometry/glc_3drep.cpp
    geometry/glc_pointsprite.cpp
    geometry/glc_bsrep.cpp
    geometry/glc_wiredata.cpp
    geometry/glc_arrow.cpp
    geometry/glc_polylines.cpp
    geometry/glc_disc.cpp
    geometry/glc_cone.cpp
    geometry/glc_sphere.cpp
    geometry/glc_pointcloud.cpp
    geometry/glc_extrudedmesh.cpp
    shading/glc_material.cpp
    shading/glc_texture.cpp
    shading/glc_light.cpp
    shading/glc_selectionmaterial.cpp
    shading/glc_shader.cpp
    shading/glc_renderproperties.cpp
    shading/glc_renderer.cpp
    viewport/glc_camera.cpp
    viewport/glc_imageplane.cpp
    viewport/glc_viewport.cpp
    viewport/glc_movercontroller.cpp
    viewport/glc_mover.cpp
    viewport/glc_panmover.cpp
    viewport/glc_repmover.cpp
    viewport/glc_repcrossmover.cpp
    viewport/glc_zoommover.cpp
    viewport/glc_trackballmover.cpp
    viewport/glc_reptrackballmover.cpp
    viewport/glc_settargetmover.cpp
    viewport/glc_turntablemover.cpp
    viewport/glc_frustum.cpp
    viewport/glc_flymover.cpp
    viewport/glc_repflymover.cpp
    viewport/glc_userinput.cpp
    viewport/glc_tsrmover.cpp
    glc_global.cpp
    glc_object.cpp            
    glc_factory.cpp
    glc_boundingbox.cpp
    glc_exception.cpp
    glc_openglexception.cpp
    glc_fileformatexception.cpp
    glc_ext.cpp
    glc_state.cpp
    glc_cachemanager.cpp
    glc_renderstatistics.cpp
    glc_log.cpp
    glc_errorlog.cpp
    glc_tracelog.cpp
    glc_context.cpp
    glc_contextmanager.cpp
    glc_contextshareddata.cpp
    glc_uniformshaderdata.cpp
    3DWidget/glc_3dwidget.cpp
    3DWidget/glc_cuttingplane.cpp
    3DWidget/glc_3dwidgetmanager.cpp
    3DWidget/glc_3dwidgetmanagerhandle.cpp
    3DWidget/glc_abstractmanipulator.cpp
    3DWidget/glc_pullmanipulator.cpp
    3DWidget/glc_rotationmanipulator.cpp
    3DWidget/glc_axis.cpp
    glu/glc_project.cpp
)

add_library(glc ${glc_SRCS})

qt5_use_modules(glc Core Widgets OpenGL)
